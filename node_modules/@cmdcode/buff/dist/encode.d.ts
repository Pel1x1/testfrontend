import { bytesToStr, bytesToHex, hexToBytes, strToBytes } from './format/str.js';
export declare const Hex: {
    encode: typeof bytesToHex;
    decode: typeof hexToBytes;
};
export declare const Txt: {
    encode: typeof strToBytes;
    decode: typeof bytesToStr;
};
export declare const B58chk: {
    encode: (data: Uint8Array) => string;
    decode: (data: string) => Uint8Array;
};
export declare const Base64: {
    encode: (data: Uint8Array) => string;
    decode: (data: string) => Uint8Array;
};
export declare const B64url: {
    encode: (data: Uint8Array) => string;
    decode: (data: string) => Uint8Array;
};
export declare const Bech32: {
    to_words: (from: Uint8Array) => number[];
    to_bytes: (to: number[]) => Uint8Array;
    encode: (prefix: string, words: number[], limit?: number | false) => `${Lowercase<string>}1${string}`;
    decode: (data: string, limit?: number | false) => {
        prefix: string;
        words: number[];
    };
};
export declare const Bech32m: {
    to_words: (from: Uint8Array) => number[];
    to_bytes: (to: number[]) => Uint8Array;
    encode: (prefix: string, words: number[], limit?: number | false) => `${Lowercase<string>}1${string}`;
    decode: (data: string, limit?: number | false) => {
        prefix: string;
        words: number[];
    };
};
//# sourceMappingURL=encode.d.ts.map